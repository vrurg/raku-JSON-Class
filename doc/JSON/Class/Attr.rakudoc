=begin rakudoc
=head1 NAME

C<JSON::Class::Attr> â€“ base role for attribute descriptors

=head1 ATTRIBUTES

=begin item
C<Bool >B<C<$.skip>>

Skip this attribute altogether:

=begin code :lang<raku>
has $.attr is json(:skip);
=end code

=end item

=begin item
C<Str:D >B<C<$.json-name>>

Name of JSON object key. Unless manually altered by user, it is attribute base name.
=end item

=begin item
C<Bool >B<C<$.lazy>>

I<True> if attribute is lazily deserialized.
=end item

=head1 METHODS

=begin item
B<C<method set-serializer()>>, B<C<method set-deserializer()>>

These methods must be implemented by particular attribute descriptor class.
=end item

=begin item
B<C<method sigil()>>

Gives attribute sigil.
=end item

=begin item
B<C<method skip-null()>>

I<True> if this attribute only serializable with a defined value.
=end item

=begin item
B<C<method kind-type('attribute')>>

Returns attribute constraint type.
=end item

=head1 SEE ALSO

=item L<C<JSON::Class>|rakudoc:JSON::Class>
=item L<C<JSON::Class::Details>|rakudoc:JSON::Class::Details>
=item L<C<JSON::Class::Descriptor>|rakudoc:JSON::Class::Descriptor>
=item L<C<JSON::Class::Attr::Associative>|rakudoc:JSON::Class::Attr::Associative>
=item L<C<JSON::Class::Attr::Positional>|rakudoc:JSON::Class::Attr::Positional>
=item L<C<JSON::Class::Attr::Scalar>|rakudoc:JSON::Class::Attr::Scalar>

=head1 COPYRIGHT

(c) 2023, Vadim Belman <vrurg@cpan.org>

=head1 LICENCE

Artistic License 2.0

See the L<I<docs/md/LICENCE>|file:docs/md/LICENCE> file in this distribution.

=end rakudoc

